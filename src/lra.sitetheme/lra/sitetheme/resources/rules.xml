<?xml version="1.0" encoding="UTF-8"?>
<rules
    xmlns="http://namespaces.plone.org/diazo"
    xmlns:css="http://namespaces.plone.org/diazo/css"
    xmlns:xsl="http://www.w3.org/1999/XSL/Transform">

     <!-- Setup custom login form -->
    <theme href="dist/signin/index.html" css:if-content="body.template-login_form" />
    <theme href="dist/signin/index.html" css:if-content="body.template-logged_out" />
    <theme href="dist/signin/index.html" css:if-content="body.template-login_failed" />
    <theme href="dist/signin/index.html" css:if-content="body.template-mail_password_form" />
    <theme href="dist/signin/index.html" css:if-content="body.template-mail_password_response" />
    <theme href="dist/signin/index.html" css:if-content="body.template-pwreset_form" />
    <theme href="dist/signin/index.html" css:if-content="body.template-pwreset_finish" />
    <theme href="dist/frontpage/index.html" css:if-content="body.template-frontpage-view" />

    <!-- Rules applying to a standard Plone web page -->
    <rules css:if-content="#visual-portal-wrapper">

        <notheme if="$ajax_load" />
        <theme href="dist/index.html" />

        <replace css:theme="title" css:content="title" />
        <after theme="/html/head/title" css:content="base" />
        <!-- Add meta tags -->
        <drop theme="/html/head/meta" />

        <before content="/html/head/meta" theme="/html/head/title" />

       <rules css:if-content="body.userrole-authenticated">
            <!-- Copy style, script and link tags in the order they appear in the content -->
            <after
                content="/html/head/style | /html/head/script | /html/head/link"
                theme-children="/html/head"
                />

            <drop theme="/html/head/style" />
            <drop theme="/html/head/link" />

            <!-- Drop scripts from theme footer if present -->
            <!--<drop theme="/html/body/script" />-->
        </rules>

        <!-- Custom favicon implementation -->
        <drop css:content="head link[rel='apple-touch-icon']" />
        <drop css:content="head link[rel='shortcut icon']" />
        <after theme="/html/head">
            <link rel="shortcut icon" href="/++theme++lra.sitetheme/dist/assets/ico/favicon.ico" type="images/x-icon" />
            <link rel="apple-touch-icon-precomposed" sizes="144x144" href="/++theme++lra.sitetheme/dist/assets/ico/apple-touch-icon-144-precomposed.png" />
            <link rel="shortcut icon" href="/++theme++lra.sitetheme/dist/assets/ico/favicon.png" />
        </after>

        <!-- Copy over the id/class attributes on the body tag.
             This is important for per-section styling -->
        <merge attributes="class" css:content="body" css:theme="body" />
        <copy attributes="*" css:content="body" css:theme="body" />

         <!-- CMSUI Editbar replacements -->
        <drop css:theme="#app-toolbar"
            css:if-content=".userrole-anonymous" />

        <!--<replace css:theme="#app-toolbar"
            css:content="#app-toolbar" />-->

        <!-- toolbar -->
        <before css:theme="#app-navbar"
            css:content="#edit-bar"
            css:if-not-content=".ajax_load"
            css:if-content=".userrole-authenticated"/>

        <!-- Logo (link target) -->
        <copy attributes="href" css:content="#portal-logo" css:theme=".app-navbar-brand" />
        <copy attributes="href" css:content="#portal-logo" css:theme=".app-brand" />

        <!-- Portal searchbox -->
        <!--<copy attributes="action" css:content="#portal-searchbox form"
            css:theme="#portal-searchbox" />-->

        <!-- Global navigation -->
        <replace css:content="#portal-globalnav li"
            css:theme-children="#app-navbar-nav" />

       <!-- Breadcrumbs -->
        <replace css:content="#portal-breadcrumbs" method="raw" if-content="//*[@id='breadcrumbs-1']">
            <ol class="breadcrumb">
                <xsl:for-each select="./div/ol/li[not(position() = last())]//a">
                    <li>
                        <xsl:apply-templates select="."/>
                    </li>
                </xsl:for-each>
                <li class="active">
                    <xsl:apply-templates select="./div/ol/li[position() = last()]/*"/>
                </li>
            </ol>
        </replace>
        <replace css:theme-children="#app-pathbar" css:content="#portal-breadcrumbs" />

        <!-- Banner -->
        <drop css:theme="#app-banner"
                css:if-not-content="#app-banner" />

        <replace css:content="#app-banner"
                css:theme="#app-banner"
                css:if-content="#app-banner" />

         <!-- Login form rules -->
        <replace css:content-children="#content-core"
                css:theme-children="#app-signin-body"
                css:if-content="body.template-login_form" />
        <replace css:content-children="#content-core"
                css:theme-children="#app-signin-content"
                css:if-content="body.template-login_failed" />
        <replace css:content-children="#content-core"
                css:theme-children="#app-signin-body"
                css:if-content="body.template-logged_out" />
        <replace css:content-children="#content"
                css:theme-children="#app-signin-content"
                css:if-content="body.template-mail_password_form" />
        <replace css:content-children="#content"
                css:theme-children="#app-signin-content"
                css:if-content="body.template-mail_password_response" />
        <replace css:content-children="#content"
                css:theme-children="#app-signin-content"
                css:if-content="body.template-pwreset_form" />
        <replace css:content-children="#content"
                css:theme-children="#app-signin-content"
                css:if-content="body.template-pwreset_finish" />


        <!-- Document First Heading -->
        <replace css:content=".documentFirstHeading">
            <div class="app-page-header">
                <h1 class="app-page-title">
                    <xsl:apply-templates />
                </h1>
            </div>
        </replace>
        <!-- Document lead description -->
        <replace css:content=".documentDescription">
            <p class="app-page-abstract">
                <xsl:apply-templates />
            </p>
        </replace>
        <!-- Add classes to content core -->
         <replace css:content="#content-core">
             <div class="app-page-content" id="content-core">
                 <xsl:apply-templates />
             </div>
         </replace>

        <!-- Document Content -->
        <replace css:content-children="#content"
            css:theme-children="#content" />

        <!-- Table styles -->
        <replace css:content="table.listing">
            <table>
                <xsl:copy-of select="@*" />
                <xsl:attribute name="class">table table-hover</xsl:attribute>
                <xsl:apply-templates />
            </table>
        </replace>


        <!-- Alert and portal messages -->
        <before css:content=".portalMessage" css:theme="#content" />
        <strip css:content=".portalMessage dd"/>
        <replace css:content=".portalMessage" >
          <xsl:choose>
              <xsl:when css:test=".portalMessage[style]"/>
              <xsl:when css:test=".portalMessage">
                  <div class="app-callout app-callout-default alert-dismissable" role="alert">
                      <xsl:choose>
                          <xsl:when css:test=".info">
                              <xsl:attribute name="class">app-callout app-callout-success alert-dismissable</xsl:attribute>
                          </xsl:when>
                          <xsl:when css:test=".error">
                              <xsl:attribute name="class">app-callout app-callout-danger alert-dismissable</xsl:attribute>
                          </xsl:when>
                          <xsl:when css:test=".warning">
                              <xsl:attribute name="class">app-callout app-callout-warning alert-dismissable</xsl:attribute>
                          </xsl:when>
                      </xsl:choose>
                      <h4><xsl:apply-templates select="./dt/*"/></h4>
                      <xsl:apply-templates />
                  </div>
              </xsl:when>
          </xsl:choose>
        </replace>


        <replace css:content-children="#viewlet-below-content"
            css:theme-children="#app-below-main-content" />

        <replace css:content=".configlets">
            <ul class="nav nav-list">
                <xsl:apply-templates />
            </ul>
        </replace>


        <replace css:content="input">
            <xsl:choose>
                <xsl:when css:test="[type='submit'],[type='button']">
                    <button>
                        <xsl:copy-of select="@*" />
                        <xsl:choose>
                            <xsl:when css:test=".delete, .destructive, [value='Delete']">
                                <xsl:attribute name="class"><xsl:value-of select="./@class" /> btn btn-danger</xsl:attribute>
                            </xsl:when>
                            <xsl:when css:test=".searchButton, .context, .submit-widget">
                                <xsl:attribute name="class"><xsl:value-of select="./@class" /> btn btn-primary</xsl:attribute>
                            </xsl:when>
                            <xsl:when css:test=".standalone">
                                <xsl:attribute name="class"><xsl:value-of select="./@class" /> btn btn-info</xsl:attribute>
                            </xsl:when>
                            <xsl:otherwise>
                              <xsl:attribute name="class"><xsl:value-of select="./@class" /> btn btn-default</xsl:attribute>
                            </xsl:otherwise>
                        </xsl:choose>
                        <xsl:value-of select="./@value"/>
                    </button>
                </xsl:when>
                <xsl:when css:test="[type='text'][name$='.title'],#title">
                    <xsl:copy>
                        <xsl:copy-of select="@*" />
                        <xsl:attribute name="class"><xsl:value-of select="./@class" /> input-block-level</xsl:attribute>
                        <xsl:apply-templates />
                    </xsl:copy>
                </xsl:when>
                <xsl:when css:test="[class='label checkboxType']">
                    <xsl:copy>
                        <xsl:copy-of select="@*" />
                        <xsl:attribute name="class">checkboxType</xsl:attribute>
                        <xsl:apply-templates />
                    </xsl:copy>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:copy-of select="."/>
                </xsl:otherwise>
            </xsl:choose>
        </replace>


        <!-- navigation box -->
        <replace css:content=".portletNavigationTree">
            <div class="app-card app-card-nav app-nav-list">
                <div class="app-card-main">
                    <nav class="app-nav-tree">
                        <xsl:for-each css:select=".portletContent > *">
                            <ul class="app-nav-tree-list">
                                <xsl:if test="@class[contains(.,'navTreeLevel0')]">
                                    <xsl:attribute name="class">app-nav-list app-nav-level-0</xsl:attribute>
                                </xsl:if>
                                <xsl:if test="@class[contains(.,'navTreeLevel1')]">
                                    <xsl:attribute name="class">app-nav-list app-nav-level-1</xsl:attribute>
                                </xsl:if>
                                <xsl:if test="@class[contains(.,'navTreeLevel2')]">
                                    <xsl:attribute name="class">app-nav-list app-nav-level-2</xsl:attribute>
                                </xsl:if>
                                <xsl:if test="@class[contains(.,'navTreeItem')]">
                                    <xsl:attribute name="class"><xsl:value-of select="./@class" /> app-nav-list-item</xsl:attribute>
                                </xsl:if>
                                <xsl:for-each css:select=".navTreeItem">
                                  <li class="app-nav-list-item">
                                    <a class="app-nav-list-link">
                                        <xsl:copy-of select="./a/@*[local-name() != 'class']"/>
                                       <xsl:attribute name="class"><xsl:value-of select="./@class" /> app-nav-list-link</xsl:attribute>
                                       <xsl:copy-of select="./a/text()" />
                                    </a>
                                  </li>
                                </xsl:for-each>
                            </ul>
                        </xsl:for-each>
                    </nav>
                </div>
            </div>
        </replace>

        <!--  transform all portlets  -->
        <replace css:content=".portlet:not(.portletNavigationTree)">
            <div class="app-card app-card-default">
                <xsl:for-each css:select=".portlet > *">
                    <div>
                        <xsl:if test="@class[contains(.,'portletHeader')]">
                            <xsl:attribute name="class">app-card-header</xsl:attribute>
                        </xsl:if>
                        <xsl:if test="@class[contains(.,'portletContent')]">
                            <xsl:attribute name="class">app-card-main</xsl:attribute>
                        </xsl:if>
                        <xsl:if test="@class[contains(.,'portletFooter')]">
                            <xsl:attribute name="class">app-card-footer</xsl:attribute>
                        </xsl:if>
                        <xsl:copy-of select="node()"/>
                    </div>
                </xsl:for-each>
            </div>
        </replace>


        <!-- News -->
        <replace css:content-children="#app-news-list"
            css:theme-children="#app-news-list-frontpage" />

        <!-- Columns example -->
        <replace css:content-children="#portal-column-one > *"
            css:theme-children="#app-sidebar" />

    </rules>

</rules>
